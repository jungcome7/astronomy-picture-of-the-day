{"version":3,"sources":["redux/apod/actionTypes.ts","redux/apod/reducer.ts","redux/apod/actions.ts","redux/loading/reducer.ts","redux/loading/actions.ts","api/api.ts","redux/apod/saga.ts","styles/color-variables.ts","styles/GlobalStyle.tsx","containers/ApodPage/ApodPageStyle.ts","elements/SearchBar/SearchBarStyle.ts","elements/SearchBar/SearchBar.tsx","constants/index.ts","elements/DatePicker/DatePickerStyle.ts","elements/DatePicker/DatePicker.tsx","components/Header/HeaderStyle.ts","components/Header/Header.tsx","components/ApodDetail/ApodDetailStyle.ts","components/ApodDetail/ApodDetail.tsx","containers/ApodPage/ApodPage.tsx","components/CardList/CardListStyle.ts","elements/Card/CardStyle.ts","elements/Card/Card.tsx","components/CardList/CardList.tsx","containers/Main/MainStyle.ts","hooks/useScroll.ts","containers/Main/Main.tsx","utils/getPeriod.ts","routes/index.tsx","App.tsx","redux/index.ts","index.tsx","redux/apod/index.ts","redux/loading/index.ts","redux/loading/actionTypes.ts"],"names":["ActionTypes","apod","createReducer","apodList","year","page","AT","GET_APOD_BY_PERIOD_SUCCESS","state","payload","GET_APOD_BY_PERIOD_ERROR","error","GET_APOD_BY_YEAR","GET_APOD_BY_YEAR_SUCCESS","GET_APOD_BY_YEAR_ERROR","getApodByPeriod","createAction","GET_APOD_BY_PERIOD","startDate","endDate","getApodByYear","loading","START_LOADING","action","FINISH_LOADING","startLoading","requestType","finishLoading","URLWithAPIKey","api","axios","create","baseURL","headers","console","log","get","params","start_date","end_date","getApodByPeriodSaga","getApodByYearSaga","apodSaga","put","call","response","type","data","takeLatest","PALETTE","MAIN","WHITE","BLACK","GRAY","GlobalStyle","createGlobalStyle","reset","Container","styled","div","SearchInputForm","input","Icon","CIcon","SearchBar","onChange","onRemove","searchInput","placeholder","value","name","size","IconSize","S","onClick","THIS_YEAR","Date","getFullYear","YEARS","Array","fill","map","index","Select","select","Option","option","DatePicker","onSetYear","Logo","Header","isLogo","isSearchBar","isDatePicker","history","useHistory","dispatch","useDispatch","useCallback","e","Number","target","goToMain","push","Wrapper","ApodTitle","ApodDate","LinkToHDImg","a","ApodImg","img","ApodVideo","iframe","ApodCopyright","ApodExplanation","p","loadingAnimation","css","LoadingIcon","ApodDetail","apodDetail","title","copyright","date","explanation","hdurl","media_type","url","href","src","L","ApodPage","match","useSelector","useMemo","find","Layout","IconWrapper","ApodThumbnailImg","ApodThumbnailVideo","Card","goToApodDetail","CardList","filteredApodList","initialLoading","scrollLoading","useScroll","callback","isLoading","useEffect","loadApodsController","window","scrollY","innerHeight","document","documentElement","scrollHeight","removeEventListener","addEventListener","Main","useState","setSearchInput","loadApods","oneDayDateTime","Interval","startDateTime","getTime","endDateTime","toISOString","split","getPeriod","now","getDate","length","filter","toLowerCase","includes","AppRouter","exact","path","component","App","rootSaga","all","rootReducer","combineReducers","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.b26bf49b.chunk.js","sourcesContent":["enum ActionTypes {\n  GET_APOD_BY_PERIOD = 'apod/GET_APOD_BY_PERIOD',\n  GET_APOD_BY_PERIOD_SUCCESS = 'apod/GET_APOD_BY_PERIOD_SUCCESS',\n  GET_APOD_BY_PERIOD_ERROR = 'apod/GET_APOD_BY_PERIOD_ERROR',\n\n  GET_APOD_BY_YEAR = 'apod/GET_APOD_BY_YEAR',\n  GET_APOD_BY_YEAR_SUCCESS = 'apod/GET_APOD_BY_YEAR_SUCCESS',\n  GET_APOD_BY_YEAR_ERROR = 'apod/GET_APOD_BY_YEAR_ERROR',\n}\n\nexport default ActionTypes;\n","import { createReducer } from 'typesafe-actions';\nimport { ApodState, ApodAction } from './types';\nimport AT from './actionTypes';\n\nconst initialState: ApodState = {\n  apodList: [],\n  // 필요시 list에서 가져오면 됨. 굳이 저장할 필요 x. 핵심: key를 url path에서 가져온다\n  year: 2021,\n  page: 1,\n};\n\n// switch case\n\nconst apod = createReducer<ApodState, ApodAction>(initialState, {\n  [AT.GET_APOD_BY_PERIOD_SUCCESS]: (state, { payload: apodList }) => ({\n    ...state,\n    apodList: [...state.apodList, ...apodList],\n  }),\n  [AT.GET_APOD_BY_PERIOD_ERROR]: (state, { payload: error }) => ({\n    ...state,\n    error,\n  }),\n  [AT.GET_APOD_BY_YEAR]: (state, { payload: year }) => ({\n    ...state,\n    page: 1,\n    year,\n  }),\n  [AT.GET_APOD_BY_YEAR_SUCCESS]: (state, { payload: apodList }) => ({\n    ...state,\n    apodList,\n  }),\n  [AT.GET_APOD_BY_YEAR_ERROR]: (state, { payload: error }) => ({\n    ...state,\n    error,\n  }),\n});\n\nexport default apod;\n\n// export default (state: ApodState = initialState, action: ApodAction) => {\n//   switch (action.type) {\n//     case AT.GET_APOD_BY_PERIOD_SUCCESS:\n//       return {\n//         ...state,\n//         apodList: [...state.apodList, ...action.payload.apodList],\n//       };\n\n//     case AT.GET_APOD_BY_PERIOD_ERROR:\n//       return {\n//         ...state,\n//         error: action.payload.error,\n//       };\n\n//     case AT.GET_APOD_BY_YEAR:\n//       return {\n//         ...state,\n//         page: 1,\n//         year: action.payload.year,\n//       };\n\n//     case AT.GET_APOD_BY_YEAR_SUCCESS:\n//       return {\n//         ...state,\n//         apodList: action.payload.apodList,\n//       };\n\n//     case AT.GET_APOD_BY_YEAR_ERROR:\n//       return {\n//         ...state,\n//         error: action.payload.error,\n//       };\n//   }\n// };\n","import { createAction } from 'typesafe-actions';\nimport { Apod } from '../../types';\nimport AT from './actionTypes';\n\nexport const getApodByPeriod = createAction(\n  AT.GET_APOD_BY_PERIOD,\n  ({ startDate, endDate }) => ({\n    startDate,\n    endDate,\n  }),\n)();\n\nexport const getApodByPeriodSuccess = createAction(\n  AT.GET_APOD_BY_PERIOD_SUCCESS,\n  (apodList) => apodList,\n)();\n\ninterface PayLoad {\n  apodList: Apod[];\n  year: number;\n  error?: string;\n}\n\nexport const getApodByPeriodError = createAction(\n  AT.GET_APOD_BY_PERIOD_ERROR,\n  (error) => error,\n)<PayLoad>();\n\nexport const getApodByYear = createAction(\n  AT.GET_APOD_BY_YEAR,\n  (year) => year,\n)();\n\nexport const getApodByYearSuccess = createAction(\n  AT.GET_APOD_BY_YEAR_SUCCESS,\n  (apodList) => apodList,\n)();\n\nexport const getApodByYearError = createAction(\n  AT.GET_APOD_BY_YEAR_ERROR,\n  (error) => error,\n)();\n","import { LoadingState, LoadingAction } from './types';\nimport { createReducer } from 'typesafe-actions';\nimport AT from './actionTypes';\n\nconst initialState: LoadingState = {};\n\nconst loading = createReducer<LoadingState, LoadingAction>(initialState, {\n  [AT.START_LOADING]: (state, action) => ({\n    ...state,\n    [action.payload]: true,\n  }),\n  [AT.FINISH_LOADING]: (state, action) => ({\n    ...state,\n    [action.payload]: false,\n  }),\n});\n\nexport default loading;\n","import { createAction } from 'typesafe-actions';\nimport AT from './actionTypes';\n\nexport const startLoading = createAction(\n  AT.START_LOADING,\n  (requestType) => requestType,\n)<string>();\n\nexport const finishLoading = createAction(\n  AT.FINISH_LOADING,\n  (requestType) => requestType,\n)<string>();\n","import axios from 'axios';\n\nconst URL = 'https://api.nasa.gov/planetary/apod';\nconst API_KEY = 'O5zaBK5eqI3ub8SmVdlb4JdGcewih1y5MiQzt2pD';\nconst URLWithAPIKey = `${URL}?api_key=${API_KEY}`;\n\nconst api = axios.create({\n  baseURL: URLWithAPIKey,\n  headers: { 'Content-Type': 'application/json' },\n});\n\ninterface Period {\n  startDate: string;\n  endDate: string;\n}\n\nexport function getApodByPeriod({ startDate, endDate }: Period) {\n  console.log(startDate, endDate);\n  return api.get('', {\n    params: { start_date: startDate, end_date: endDate },\n  });\n}\n\nexport function getApodByYear(year: number) {\n  return api.get('', {\n    params: { start_date: `${year}-01-01`, end_date: `${year}-01-09` },\n  });\n}\n\nexport default api;\n","import { takeLatest } from 'redux-saga/effects';\nimport { getApodByPeriod, getApodByYear } from '../../api/api';\nimport { call, put } from 'redux-saga/effects';\nimport { startLoading, finishLoading } from '../loading';\nimport { ApodAction } from './types';\nimport AT from './actionTypes';\n\nfunction* getApodByPeriodSaga(action: ApodAction) {\n  yield put(startLoading(AT.GET_APOD_BY_PERIOD));\n  try {\n    const response = yield call(getApodByPeriod, action.payload);\n    yield put({\n      type: AT.GET_APOD_BY_PERIOD_SUCCESS,\n      payload: response.data,\n    });\n  } catch (e) {\n    yield put({\n      type: AT.GET_APOD_BY_PERIOD_ERROR,\n      payload: e,\n      error: true,\n    });\n  }\n\n  yield put(finishLoading(AT.GET_APOD_BY_PERIOD));\n}\n\nfunction* getApodByYearSaga(action: ApodAction) {\n  yield put(startLoading(AT.GET_APOD_BY_YEAR));\n  try {\n    const response = yield call(getApodByYear, action.payload);\n    yield put({\n      type: AT.GET_APOD_BY_YEAR_SUCCESS,\n      payload: response.data,\n    });\n  } catch (e) {\n    yield put({\n      type: AT.GET_APOD_BY_YEAR_ERROR,\n      payload: e,\n      error: true,\n    });\n  }\n\n  yield put(finishLoading(AT.GET_APOD_BY_YEAR));\n}\n\nexport function* apodSaga() {\n  yield takeLatest(AT.GET_APOD_BY_PERIOD, getApodByPeriodSaga);\n  yield takeLatest(AT.GET_APOD_BY_YEAR, getApodByYearSaga);\n}\n","export interface Palette {\n  MAIN: string;\n  WHITE: string;\n  BLACK: string;\n  GRAY: string[];\n}\n\nconst PALETTE: Palette = {\n  MAIN: '#B80D57',\n  WHITE: '#ffffff',\n  BLACK: '#000000',\n  GRAY: ['#f0f0f0', '#ebebeb', '#E5E5E5', '#C9C9C9', '#7D7D7D', '#6E6E6E'],\n};\n\nexport default PALETTE;\n","import reset from 'styled-reset';\nimport { createGlobalStyle } from 'styled-components';\nimport PALETTE from './color-variables';\n\nconst GlobalStyle = createGlobalStyle`\n  ${reset}\n  \n  * {\n    box-sizing: border-box;\n  }\n\n  body{\n    font-family: -apple-system,system-ui,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif;\n    background-color: ${PALETTE.GRAY[0]};\n  }\n\n  a {\n    color: inherit;\n    text-decoration: none;\n  }\n\n  input, button, textarea,p {\n    background-color: transparent;\n    border: none;\n    outline: none;\n  }\n`;\n\nexport default GlobalStyle;\n","import styled from 'styled-components';\n\nexport const Container = styled.div``","import styled from 'styled-components';\nimport PALETTE from '../../styles/color-variables';\nimport { Icon as CIcon } from '@channel.io/design-system';\n\nexport const Container = styled.div`\n  width: 400px;\n  background-color: ${PALETTE.GRAY[0]};\n  padding: 10px 15px;\n  border-radius: 5px;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  @media only screen and (max-width: 1100px) {\n    width: 300px;\n  }\n  @media only screen and (max-width: 900px) {\n    display: none;\n  }\n`;\n\nexport const SearchInputForm = styled.input`\n  font-size: 16px;\n  width: 100%;\n`;\n\nexport const Icon = styled(CIcon)`\n  cursor: pointer;\n  color: ${PALETTE.GRAY[4]};\n`;\n","import React from 'react';\nimport * as S from './SearchBarStyle';\nimport { IconSize } from '@channel.io/design-system';\n\ninterface SearchBarProps {\n  onChange?: (e: any) => void;\n  onRemove?: () => void;\n  searchInput?: string;\n}\n\nfunction SearchBar({ onChange, onRemove, searchInput }: SearchBarProps) {\n  return (\n    <S.Container>\n      <S.SearchInputForm\n        placeholder=\"Search\"\n        value={searchInput}\n        onChange={onChange}\n      />\n      {searchInput && (\n        <S.Icon name=\"cancel\" size={IconSize.S} onClick={onRemove} />\n      )}\n    </S.Container>\n  );\n}\n\nexport default SearchBar;\n","export const DEFAULT_DEBOUNCE_TIME = 200;\n\nexport const THIS_YEAR = new Date().getFullYear();\nexport const YEARS = Array(10)\n  .fill(0)\n  .map((value, index) => THIS_YEAR - index);\n\nexport const APODS_PER_API_CALL = 9;\n\nexport const SCROLL_Y_RATIO = 0.9;\n","import styled from 'styled-components';\nimport PALETTE from '../../styles/color-variables';\n\nexport const Container = styled.div`\n  margin: 20px;\n`;\n\nexport const Select = styled.select`\n  cursor: pointer;\n  width: 100px;\n  height: 30px;\n  border: 1px solid ${PALETTE.GRAY[3]};\n  border-radius: 5px;\n  color: ${PALETTE.GRAY[5]};\n`;\n\nexport const Option = styled.option``;\n","import React from 'react';\nimport { YEARS } from '../../constants';\nimport * as S from './DatePickerStyle';\n\ninterface DatePickerProps {\n  onSetYear?: (e: any) => void;\n}\n\nfunction DatePicker({ onSetYear }: DatePickerProps) {\n  return (\n    <S.Container>\n      <S.Select onChange={onSetYear}>\n        {YEARS.map((year) => (\n          <S.Option key={year}>{year}</S.Option>\n        ))}\n      </S.Select>\n    </S.Container>\n  );\n}\n\nexport default DatePicker;\n","import styled from 'styled-components';\nimport PALETTE from '../../styles/color-variables';\n\nexport const Container = styled.div`\n  background-color: ${PALETTE.WHITE};\n  height: 60px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  position: fixed;\n  top: 0;\n  width: 100%;\n  z-index: 3;\n  /* overflow: scroll; */\n`;\n\nexport const Logo = styled.div`\n  margin: 20px;\n  font-size: 18px;\n  font-weight: 600;\n  cursor: pointer;\n  user-select: none;\n`;\n","import React, { useCallback } from 'react';\nimport { SearchBar } from '../../elements/SearchBar';\nimport { DatePicker } from '../../elements/DatePicker';\nimport * as S from './HeaderStyle';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { getApodByYear } from '../../redux/apod';\n\nexport interface HeaderProps {\n  onChange?: (e: any) => void;\n  onRemove?: () => void;\n  searchInput?: string;\n  isLogo?: boolean;\n  isSearchBar?: boolean;\n  isDatePicker?: boolean;\n}\n\nfunction Header({\n  onChange,\n  onRemove,\n  searchInput,\n  isLogo = true,\n  isSearchBar = true,\n  isDatePicker = true,\n}: HeaderProps) {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const onSetYear = useCallback(\n    (e) => {\n      const year = Number(e.target.value);\n      dispatch(getApodByYear(year));\n    },\n    [dispatch],\n  );\n\n  const goToMain = useCallback(() => {\n    history.push('/');\n  }, []);\n\n  return (\n    <S.Container>\n      {isLogo && (\n        <S.Logo onClick={goToMain}>Astronomy Pictures of the Day</S.Logo>\n      )}\n      {isSearchBar && (\n        <SearchBar\n          onChange={onChange}\n          onRemove={onRemove}\n          searchInput={searchInput}\n        />\n      )}\n      {isDatePicker && <DatePicker onSetYear={onSetYear} />}\n    </S.Container>\n  );\n}\n\nexport default Header;\n","import styled, { css } from 'styled-components';\nimport PALETTE from '../../styles/color-variables';\nimport { Icon as CIcon } from '@channel.io/design-system';\n\nexport const Container = styled.div`\n  width: 1200px;\n  margin: 80px auto;\n  padding: 10px;\n  background-color: ${PALETTE.WHITE};\n  border-radius: 10px;\n  min-height: 600px;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  justify-content: center;\n  width: 100%;\n  position: relative;\n`;\n\n\nexport const ApodTitle = styled.div`\n  font-size: 28px;\n  font-weight: 600;\n  margin: 6px 0 24px 0;\n`;\n\nexport const ApodDate = styled.div`\n  font-size: 18px;\n  color: ${PALETTE.GRAY[4]};\n  margin: 12px 0 2px 0;\n`;\n\nexport const LinkToHDImg = styled.a`\n  position: absolute;\n  right: 54px;\n  top: 20px;\n  font-weight: bold;\n  font-size: 20px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: ${PALETTE.GRAY[5]};\n  &:hover {\n    color: ${PALETTE.BLACK};\n  }\n`;\n\nexport const Icon = styled(CIcon)``;\n\nexport const ApodImg = styled.img``;\n\nexport const ApodVideo = styled.iframe`\n  width: 1000px;\n  height: 600px;\n`;\n\nexport const ApodCopyright = styled.div`\n  color: ${PALETTE.GRAY[4]};\n  margin: 8px;\n`;\n\nexport const ApodExplanation = styled.p`\n  width: 100%;\n  font-size: 22px;\n  padding: 0 60px;\n  margin: 10px 0;\n  line-height: 34px;\n  overflow-wrap: break-word;\n`;\n\nconst loadingAnimation = css`\n  animation: rotateAnimation 1s linear infinite;\n  @keyframes rotateAnimation {\n    from {\n      transform: rotate(360deg);\n    }\n    to {\n      transform: rotate(0deg);\n    }\n  }\n`;\n\nexport const LoadingIcon = styled(CIcon)`\n  position: absolute;\n  color: ${PALETTE.GRAY[5]};\n  top: 30vh;\n  ${loadingAnimation};\n`;\n","import React from 'react';\nimport * as S from './ApodDetailStyle';\nimport { IconSize } from '@channel.io/design-system';\nimport { Apod } from '../../types';\ninterface ApodDetailProps {\n  apodDetail?: Apod;\n}\n\n// 상위 컴포넌트에서 데이터를 모두 프롭받아 렌더링만 하면 재사용성 높아짐 (렌더링 로직에만 집중할 수 있음)\n\nfunction ApodDetail({ apodDetail }: ApodDetailProps) {\n  if (apodDetail) {\n    const {\n      title,\n      copyright,\n      date,\n      explanation,\n      hdurl,\n      media_type,\n      url,\n    } = apodDetail;\n\n    return (\n      <S.Container>\n        <S.Wrapper>\n          <S.ApodDate>{date}</S.ApodDate>\n          <S.ApodTitle>{title}</S.ApodTitle>\n          {hdurl && (\n            <S.LinkToHDImg href={hdurl} target=\"_blank\">\n              HD\n              <S.Icon name=\"in\" size={IconSize.S} />\n            </S.LinkToHDImg>\n          )}\n          {media_type === 'video' ? (\n            <S.ApodVideo src={url} />\n          ) : (\n            <S.ApodImg src={url} />\n          )}\n          {copyright && <S.ApodCopyright>©{copyright}</S.ApodCopyright>}\n          <S.ApodExplanation>{explanation}</S.ApodExplanation>\n        </S.Wrapper>\n      </S.Container>\n    );\n  }\n  return (\n    <S.Container>\n      <S.Wrapper>\n        <S.LoadingIcon name=\"rotate\" size={IconSize.L} />\n      </S.Wrapper>\n    </S.Container>\n  );\n}\n\nexport default ApodDetail;\n","import React, { useMemo } from 'react';\nimport * as S from './ApodPageStyle';\nimport { Header } from '../../components/Header';\nimport { ApodDetail } from '../../components/ApodDetail';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../redux';\nimport { Apod } from '../../types';\n\nfunction ApodPage({ match }: any) {\n  // useSelector로 겟한다음 ApodDetail에 프롭스로 넘기고 받아서 렌더링만 하는 거\n  // 리덕스 연결\n  // api call 액션을 여기서 디스패치\n\n  const apodList = useSelector((state: RootState) => state.apod.apodList);\n\n  const apodDetail = useMemo(\n    () => apodList.find((apod: Apod) => apod.date === match.params.apod),\n    [apodList],\n  );\n  return (\n    <S.Container>\n      <Header isSearchBar={false} isDatePicker={false} />\n      <ApodDetail apodDetail={apodDetail} />\n    </S.Container>\n  );\n}\n\nexport default ApodPage;\n","import styled, { css } from 'styled-components';\nimport { Icon as CIcon } from '@channel.io/design-system';\nimport PALETTE from '../../styles/color-variables';\n\nexport const Layout = styled.div`\n  width: 1100px;\n  margin: 60px auto;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n`;\n\nexport const Container = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-column-gap: 20px;\n  grid-row-gap: 20px;\n  max-width: 1100px;\n  margin: 20px;\n`;\n\nconst loadingAnimation = css`\n  animation: rotateAnimation 1s linear infinite;\n  @keyframes rotateAnimation {\n    from {\n      transform: rotate(360deg);\n    }\n    to {\n      transform: rotate(0deg);\n    }\n  }\n`;\n\nexport const IconWrapper = styled.div`\n  width: 1100px;\n  height: 400px;\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Icon = styled(CIcon)`\n  position: absolute;\n  color: ${PALETTE.GRAY[5]};\n  top: 20vh;\n  ${loadingAnimation};\n`;\n","import styled from 'styled-components';\nimport PALETTE from '../../styles/color-variables';\n\nexport const Container = styled.div`\n  width: 330px;\n  padding: 15px;\n  background-color: ${PALETTE.WHITE};\n  cursor: pointer;\n  border-radius: 5px;\n  transition: all 0.5s;\n  &:hover {\n    transform: scale(1.03);\n  }\n`;\n\nexport const ApodThumbnailImg = styled.img`\n  width: 300px;\n  height: 300px;\n  object-fit: cover;\n  border-radius: 5px;\n`;\n\nexport const ApodThumbnailVideo = styled.iframe`\n  width: 300px;\n  height: 300px;\n  object-fit: cover;\n  border-radius: 5px;\n`;\n\nexport const ApodTitle = styled.div`\n  font-size: 18px;\n  margin: 5px 3px;\n`;\n\nexport const ApodDate = styled.div`\n  font-size: 14px;\n  color: grey;\n  margin: 2px 3px;\n`;\n","import React, { useCallback } from 'react';\nimport * as S from './CardStyle';\nimport { Apod } from '../../types';\nimport { useHistory } from 'react-router-dom';\n\ntype CardProps = {\n  key: string;\n  apod: Apod;\n};\n\nfunction Card({ apod }: CardProps) {\n  const { title, url, date, media_type } = apod;\n  const history = useHistory();\n\n  const goToApodDetail = useCallback(() => {\n    history.push(`/apod/${date}`);\n  }, [apod]);\n\n  return (\n    <S.Container onClick={goToApodDetail}>\n      {media_type === 'video' ? (\n        <S.ApodThumbnailVideo src={url} />\n      ) : (\n        <S.ApodThumbnailImg src={url} />\n      )}\n      <S.ApodTitle>{title}</S.ApodTitle>\n      <S.ApodDate>{date}</S.ApodDate>\n    </S.Container>\n  );\n}\n\nexport default Card;\n","import React from 'react';\nimport * as S from './CardListStyle';\nimport { Card } from '../../elements/Card';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../redux';\nimport { IconSize } from '@channel.io/design-system';\nimport { Apod } from '../../types';\n\ninterface CardListProps {\n  filteredApodList: Apod[];\n}\n\nfunction CardList({ filteredApodList }: CardListProps) {\n  const apodList = useSelector((state: RootState) => state.apod.apodList);\n\n  const initialLoading = useSelector(\n    (state: RootState) => state.loading['apod/GET_APOD_BY_YEAR'],\n  );\n\n  const scrollLoading = useSelector(\n    (state: RootState) => state.loading['apod/GET_APOD_BY_PERIOD'],\n  );\n\n  return (\n    <>\n      <S.Layout>\n        {initialLoading ? (\n          <S.Icon name=\"rotate\" size={IconSize.L} />\n        ) : (\n          <S.Container>\n            {apodList &&\n              filteredApodList.map((apod) => (\n                <Card key={apod.date} apod={apod} />\n              ))}\n          </S.Container>\n        )}\n\n        {scrollLoading && (\n          <S.IconWrapper>\n            <S.Icon name=\"rotate\" size={IconSize.L} />\n          </S.IconWrapper>\n        )}\n      </S.Layout>\n    </>\n  );\n}\n\nexport default CardList;\n","import styled from 'styled-components';\n\nexport const Container = styled.div``;\n","import { useEffect } from 'react';\nimport { SCROLL_Y_RATIO } from '../constants';\n\nfunction useScroll(callback: () => void, isLoading?: boolean) {\n  // 데이터와 뷰에 관련된 로직이 섞여 있음\n  // 컨텍스트를 잘 분리하자.\n  // 인피니트 scroll역할만 하는 유틸이었어야 함\n\n  useEffect(() => {\n    const loadApodsController = () => {\n      const clientHeight = window.scrollY + window.innerHeight;\n      const documentHeight = document.documentElement.scrollHeight;\n      if (clientHeight > documentHeight * SCROLL_Y_RATIO) {\n        callback();\n        window.removeEventListener('scroll', loadApodsController);\n      }\n    };\n\n    window.addEventListener('scroll', loadApodsController);\n\n    if (isLoading) {\n      window.removeEventListener('scroll', loadApodsController);\n      return;\n    }\n\n    return () => {\n      window.removeEventListener('scroll', loadApodsController);\n    };\n  }, [callback]);\n}\n\nexport default useScroll;\n","import React, { useCallback, useEffect, useState, useMemo } from 'react';\nimport { Header } from '../../components/Header';\nimport { CardList } from '../../components/CardList';\nimport * as S from './MainStyle';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { THIS_YEAR } from '../../constants';\nimport { getApodByYear, getApodByPeriod } from '../../redux/apod';\nimport useScroll from '../../hooks/useScroll';\nimport { RootState } from '../../redux';\nimport { getPeriod } from '../../utils/getPeriod';\n\n// function 키워드로 작성 (익명함수 x - 디버깅시 원인 찾기 어려움)\nfunction Main() {\n  const apodList = useSelector((state: RootState) => state.apod.apodList);\n  const page = useSelector((state: RootState) => state.apod.page);\n  const year = useSelector((state: RootState) => state.apod.year);\n\n  const loading = useSelector(\n    (state: RootState) => state.loading['apod/GET_APOD_BY_PERIOD'],\n  );\n\n  const dispatch = useDispatch();\n\n  const [searchInput, setSearchInput] = useState<string>('');\n\n  const loadApods = useCallback(() => {\n    // eslint-disable-next-line prefer-const\n    let { startDate, endDate } = getPeriod(year, page + 1);\n    const now = new Date();\n    if (\n      year === now.getFullYear() &&\n      new Date(endDate).getDate() >= now.getDate()\n    ) {\n      endDate = new Date().toISOString().split('T')[0];\n    }\n    dispatch(getApodByPeriod({ startDate, endDate }));\n  }, [dispatch, year, page]);\n\n  useScroll(loadApods, loading);\n\n  // desk HOC/initializer 참고\n  // 초기 데이터 fetching 여기서\n\n  useEffect(() => {\n    if (!apodList.length) {\n      dispatch(getApodByYear(THIS_YEAR));\n    }\n  }, []);\n\n  const onChange = useCallback(\n    (e: any) => {\n      setSearchInput(e.target.value);\n    },\n    [setSearchInput],\n  );\n\n  const onRemove = useCallback(() => {\n    setSearchInput('');\n  }, [setSearchInput]);\n\n  const filteredApodList = useMemo(\n    () =>\n      searchInput.length\n        ? apodList.filter((apod) =>\n            apod.title.toLowerCase().includes(searchInput.toLowerCase()),\n          )\n        : apodList,\n    [apodList, searchInput],\n  );\n\n  return (\n    <S.Container>\n      <Header\n        onChange={onChange}\n        onRemove={onRemove}\n        searchInput={searchInput}\n      />\n      <CardList filteredApodList={filteredApodList} />\n    </S.Container>\n  );\n}\n\nexport default Main;\n","import { APODS_PER_API_CALL } from '../constants';\n\nexport interface Period {\n  startDate: string;\n  endDate: string;\n}\n\nexport function getPeriod(year: number, page: number): Period {\n  const oneDayDateTime = 1000 * 60 * 60 * 24;\n  const Interval = oneDayDateTime * APODS_PER_API_CALL;\n\n  const startDateTime =\n    new Date(`${year}-01-01`).getTime() + Interval * (page - 1);\n  const endDateTime = startDateTime + Interval - oneDayDateTime;\n\n  const startDate = new Date(startDateTime).toISOString().split('T')[0];\n  const endDate = new Date(endDateTime).toISOString().split('T')[0];\n\n  return { startDate, endDate };\n}\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { ApodPage } from '../containers/ApodPage';\nimport { Main } from '../containers/Main';\n\nfunction AppRouter() {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={Main} />\n      <Route path=\"/apod/:apod\" component={ApodPage} />\n    </Switch>\n  );\n}\n\nexport default AppRouter;\n","import React from 'react';\nimport GlobalStyle from './styles/GlobalStyle';\nimport AppRouter from './routes/index';\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <AppRouter></AppRouter>\n    </>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { all } from 'redux-saga/effects';\nimport apod, { apodSaga } from './apod';\nimport loading from './loading';\n\nconst rootReducer = combineReducers({ apod, loading });\n\nexport function* rootSaga() {\n  yield all([apodSaga()]);\n}\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport default rootReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer, { rootSaga } from './redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(sagaMiddleware)),\n);\n\nsagaMiddleware.run(rootSaga);\n\n// store에 직접 접근 x\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n","export { default } from './reducer';\nexport * from './actions';\nexport * from './types';\nexport * from './saga';\n","export { default } from './reducer';\nexport * from './actions';\nexport * from './types';\n","enum ActionTypes {\n  START_LOADING = 'loading/START_LOADING',\n  FINISH_LOADING = 'loading/FINISH_LOADING',\n}\n\nexport default ActionTypes;\n"],"sourceRoot":""}