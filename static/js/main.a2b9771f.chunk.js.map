{"version":3,"sources":["redux/search/reducer.ts","redux/search/actions.ts","redux/apod/reducer.ts","redux/apod/actions.ts","redux/loading/reducer.ts","redux/loading/actions.ts","api/api.ts","redux/apod/saga.ts","redux/apod/index.ts","styles/color-variables.ts","styles/GlobalStyle.tsx","containers/ApodPage/ApodPageStyle.ts","components/SearchBar/SearchBarStyle.ts","constants/index.ts","hooks/useSearch.ts","components/SearchBar/SearchBar.tsx","hooks/useSelect.ts","components/DatePicker/DatePickerStyle.ts","components/DatePicker/DatePicker.tsx","elements/Header/HeaderStyle.ts","elements/Header/Header.tsx","hooks/useApod.ts","utils/getPeriod.ts","components/ApodDetail/ApodDetailStyle.ts","components/ApodDetail/ApodDetail.tsx","containers/ApodPage/ApodPage.tsx","components/CardList/CardListStyle.ts","components/Card/CardStyle.ts","components/Card/Card.tsx","hooks/useScroll.ts","components/CardList/CardList.tsx","containers/Main/MainStyle.ts","containers/Main/Main.tsx","routes/index.tsx","App.tsx","redux/index.ts","index.tsx","redux/loading/index.ts","redux/search/actionTypes.ts","redux/loading/actionTypes.ts","redux/search/index.ts","redux/apod/actionTypes.ts"],"names":["initialState","input","search","createReducer","AT","CHANGE_INPUT","state","payload","REMOVE_INPUT","changeInput","createAction","removeInput","apod","apodList","apodSelected","year","page","finishLoad","GET_APOD_BY_PERIOD_SUCCESS","GET_APOD_BY_PERIOD_FAILURE","error","GET_APOD_BY_DATE_SUCCESS","GET_APOD_BY_DATE_FAILURE","INITIALIZE_SELECTED_APOD","GET_APOD_BY_YEAR_SUCCESS","GET_APOD_BY_YEAR_FAILURE","SET_YEAR","SET_PAGE","REMOVE_APOD_LIST","FINISH_LOAD_APODS","isFinish","getApodByPeriod","GET_APOD_BY_PERIOD","startDate","endDate","getApodByDate","GET_APOD_BY_DATE","date","initializeSelectedApod","getApodByYear","GET_APOD_BY_YEAR","setYear","setPage","removeApodList","finishLoadApods","loading","START_LOADING","action","FINISH_LOADING","startLoading","requestType","finishLoading","URLWithAPIKey","api","axios","create","baseURL","headers","console","log","get","params","start_date","end_date","getApodByPeriodSaga","getApodByDateSaga","getApodByYearSaga","apodSaga","put","call","response","type","data","takeLatest","PALETTE","MAIN","WHITE","BLACK","GRAY","GlobalStyle","createGlobalStyle","reset","Container","styled","div","SearchInputForm","Icon","CIcon","THIS_YEAR","Date","getFullYear","YEARS","Array","fill","map","value","index","useSearch","dispatch","useDispatch","searchInput","useSelector","useState","inputValue","setInputValue","useEffect","timer","setTimeout","clearTimeout","onChange","useCallback","e","target","onRemove","SearchBar","placeholder","name","size","IconSize","S","onClick","useSelect","onSetYear","Number","Select","select","Option","option","DatePicker","Logo","Header","isLogo","isSearchBar","isDatePicker","to","useApod","getApodSelected","removeSelectedApod","loadApods","oneDayDateTime","Interval","startDateTime","getTime","endDateTime","toISOString","split","getPeriod","now","getDate","Wrapper","ApodTitle","ApodDate","LinkToHDImg","a","ApodImg","img","ApodVideo","iframe","ApodCopyright","ApodExplanation","p","loadingAnimation","css","LoadingIcon","ApodDetail","title","copyright","explanation","hdurl","media_type","url","href","src","L","ApodPage","match","Layout","IconWrapper","ApodThumbnailImg","ApodThumbnailVideo","Card","history","useHistory","goToApodDetail","push","useScroll","callback","scrollLoading","loadApodsController","window","scrollY","innerHeight","document","documentElement","scrollHeight","removeEventListener","addEventListener","CardList","useApodList","initialLoading","filteredApodList","length","filter","toLowerCase","includes","Main","AppRouter","exact","path","component","App","rootSaga","all","rootReducer","combineReducers","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","ReactDOM","render","getElementById","ActionTypes"],"mappings":"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","file":"static/js/main.a2b9771f.chunk.js","sourcesContent":["import { SearchState, SearchAction } from './types';\nimport { createReducer } from 'typesafe-actions';\nimport AT from './actionTypes';\n\nconst initialState: SearchState = {\n  input: '',\n};\n\nconst search = createReducer<SearchState, SearchAction>(initialState, {\n  [AT.CHANGE_INPUT]: (state, { payload: input }) => ({\n    ...state,\n    input,\n  }),\n  [AT.REMOVE_INPUT]: () => initialState,\n});\n\nexport default search;\n","import { createAction } from 'typesafe-actions';\nimport AT from './actionTypes';\n\nexport const changeInput = createAction(\n  AT.CHANGE_INPUT,\n  (input: string) => input,\n)();\nexport const removeInput = createAction(AT.REMOVE_INPUT)();\n","import { ApodState, ApodAction } from './types';\nimport { createReducer } from 'typesafe-actions';\nimport AT from './actionTypes';\n\nconst initialState: ApodState = {\n  apodList: [],\n  apodSelected: null,\n  year: 2021,\n  page: 1,\n  finishLoad: false,\n};\n\nconst apod = createReducer<ApodState, ApodAction>(initialState, {\n  [AT.GET_APOD_BY_PERIOD_SUCCESS]: (state, { payload: apodList }) => ({\n    ...state,\n    apodList: [...state.apodList, ...apodList],\n  }),\n  [AT.GET_APOD_BY_PERIOD_FAILURE]: (state, { payload: error }) => ({\n    ...state,\n    error,\n  }),\n  [AT.GET_APOD_BY_DATE_SUCCESS]: (state, { payload: apodSelected }) => ({\n    ...state,\n    apodSelected,\n  }),\n  [AT.GET_APOD_BY_DATE_FAILURE]: (state, { payload: error }) => ({\n    ...state,\n    error,\n  }),\n  [AT.INITIALIZE_SELECTED_APOD]: (state) => ({\n    ...state,\n    apodSelected: null,\n  }),\n  [AT.GET_APOD_BY_YEAR_SUCCESS]: (state, { payload: apodList }) => ({\n    ...state,\n    apodList,\n  }),\n  [AT.GET_APOD_BY_YEAR_FAILURE]: (state, { payload: error }) => ({\n    ...state,\n    error,\n  }),\n  [AT.SET_YEAR]: (state, { payload: year }) => ({\n    ...state,\n    year,\n  }),\n  [AT.SET_PAGE]: (state, { payload: page }) => ({\n    ...state,\n    page,\n  }),\n  [AT.REMOVE_APOD_LIST]: (state) => ({\n    ...state,\n    apodList: [],\n  }),\n  [AT.FINISH_LOAD_APODS]: (state, { payload: isFinish }) => ({\n    ...state,\n    finishLoad: isFinish,\n  }),\n});\n\nexport default apod;\n","import { createAction } from 'typesafe-actions';\nimport AT from './actionTypes';\n\nexport const getApodByPeriod = createAction(\n  AT.GET_APOD_BY_PERIOD,\n  ({ startDate, endDate }) => ({\n    startDate,\n    endDate,\n  }),\n)();\n\nexport const getApodByPeriodSuccess = createAction(\n  AT.GET_APOD_BY_PERIOD_SUCCESS,\n  (apodList) => apodList,\n)();\n\nexport const getApodByPeriodFailure = createAction(\n  AT.GET_APOD_BY_PERIOD_FAILURE,\n  (error) => error,\n)();\n\nexport const getApodByDate = createAction(\n  AT.GET_APOD_BY_DATE,\n  (date) => date,\n)();\n\nexport const getApodByDateSuccess = createAction(\n  AT.GET_APOD_BY_DATE_SUCCESS,\n  (apodSelected) => apodSelected,\n)();\n\nexport const getApodByDateFailure = createAction(\n  AT.GET_APOD_BY_DATE_FAILURE,\n  (error) => error,\n)();\n\nexport const initializeSelectedApod = createAction(\n  AT.INITIALIZE_SELECTED_APOD,\n  () => ({}),\n)();\n\nexport const getApodByYear = createAction(\n  AT.GET_APOD_BY_YEAR,\n  (year) => year,\n)();\n\nexport const getApodByYearSuccess = createAction(\n  AT.GET_APOD_BY_YEAR_SUCCESS,\n  (apodList) => apodList,\n)();\n\nexport const getApodByYearFailure = createAction(\n  AT.GET_APOD_BY_YEAR_FAILURE,\n  (error) => error,\n)();\n\nexport const setYear = createAction(AT.SET_YEAR, (year) => year)();\nexport const setPage = createAction(AT.SET_PAGE, (page) => page)();\n\nexport const removeApodList = createAction(AT.REMOVE_APOD_LIST, () => [])();\n\nexport const finishLoadApods = createAction(\n  AT.FINISH_LOAD_APODS,\n  (isFinish) => isFinish,\n)();\n","import { LoadingState, LoadingAction } from './types';\nimport { createReducer } from 'typesafe-actions';\nimport AT from './actionTypes';\n\nconst initialState: LoadingState = {};\n\nconst loading = createReducer<LoadingState, LoadingAction>(initialState, {\n  [AT.START_LOADING]: (state, action) => ({\n    ...state,\n    [action.payload]: true,\n  }),\n  [AT.FINISH_LOADING]: (state, action) => ({\n    ...state,\n    [action.payload]: false,\n  }),\n});\n\nexport default loading;\n","import { createAction } from 'typesafe-actions';\nimport AT from './actionTypes';\n\nexport const startLoading = createAction(\n  AT.START_LOADING,\n  (requestType) => requestType,\n)<string>();\n\nexport const finishLoading = createAction(\n  AT.FINISH_LOADING,\n  (requestType) => requestType,\n)<string>();\n","import axios from 'axios';\n\nconst URL = 'https://api.nasa.gov/planetary/apod';\nconst API_KEY = 'O5zaBK5eqI3ub8SmVdlb4JdGcewih1y5MiQzt2pD';\nconst URLWithAPIKey = `${URL}?api_key=${API_KEY}`;\n\nconst api = axios.create({\n  baseURL: URLWithAPIKey,\n  headers: { 'Content-Type': 'application/json' },\n});\n\ntype Period = {\n  startDate: string;\n  endDate: string;\n};\n\nexport const getApodByPeriod = ({ startDate, endDate }: Period) => {\n  console.log(startDate, endDate);\n  return api.get('', {\n    params: { start_date: startDate, end_date: endDate },\n  });\n};\nexport const getApodByDate = (date: string) => {\n  return api.get('', {\n    params: { date },\n  });\n};\n\nexport const getApodByYear = (year: number) => {\n  return api.get('', {\n    params: { start_date: `${year}-01-01`, end_date: `${year}-01-09` },\n  });\n};\n\nexport default api;\n","import { takeLatest } from 'redux-saga/effects';\nimport { getApodByPeriod, getApodByDate, getApodByYear } from '../../api/api';\nimport { call, put } from 'redux-saga/effects';\nimport { startLoading, finishLoading } from '../loading';\nimport { ApodAction } from './types';\nimport AT from './actionTypes';\n\nfunction* getApodByPeriodSaga(action: ApodAction) {\n  yield put(startLoading(AT.GET_APOD_BY_PERIOD));\n  try {\n    const response = yield call(getApodByPeriod, action.payload);\n    yield put({\n      type: AT.GET_APOD_BY_PERIOD_SUCCESS,\n      payload: response.data,\n    });\n  } catch (e) {\n    yield put({\n      type: AT.GET_APOD_BY_PERIOD_FAILURE,\n      payload: e,\n      error: true,\n    });\n  }\n\n  yield put(finishLoading(AT.GET_APOD_BY_PERIOD));\n}\n\nfunction* getApodByDateSaga(action: ApodAction) {\n  yield put(startLoading(AT.GET_APOD_BY_DATE));\n  try {\n    const response = yield call(getApodByDate, action.payload);\n    yield put({\n      type: AT.GET_APOD_BY_DATE_SUCCESS,\n      payload: response.data,\n    });\n  } catch (e) {\n    yield put({\n      type: AT.GET_APOD_BY_DATE_FAILURE,\n      payload: e,\n      error: true,\n    });\n  }\n\n  yield put(finishLoading(AT.GET_APOD_BY_DATE));\n}\n\nfunction* getApodByYearSaga(action: ApodAction) {\n  yield put(startLoading(AT.GET_APOD_BY_YEAR));\n  try {\n    const response = yield call(getApodByYear, action.payload);\n    yield put({\n      type: AT.GET_APOD_BY_YEAR_SUCCESS,\n      payload: response.data,\n    });\n  } catch (e) {\n    yield put({\n      type: AT.GET_APOD_BY_YEAR_FAILURE,\n      payload: e,\n      error: true,\n    });\n  }\n\n  yield put(finishLoading(AT.GET_APOD_BY_YEAR));\n}\n\nexport function* apodSaga() {\n  yield takeLatest(AT.GET_APOD_BY_PERIOD, getApodByPeriodSaga);\n  yield takeLatest(AT.GET_APOD_BY_DATE, getApodByDateSaga);\n  yield takeLatest(AT.GET_APOD_BY_YEAR, getApodByYearSaga);\n}\n","export { default } from './reducer';\nexport * from './actions';\nexport * from './types';\nexport * from './saga';\n","interface Palette {\n  MAIN: string;\n  WHITE: string;\n  BLACK: string;\n  GRAY: string[];\n}\n\nconst PALETTE: Palette = {\n  MAIN: '#B80D57',\n  WHITE: '#ffffff',\n  BLACK: '#000000',\n  GRAY: ['#f0f0f0', '#ebebeb', '#E5E5E5', '#C9C9C9', '#7D7D7D', '#6E6E6E'],\n};\n\nexport default PALETTE;\n","import reset from 'styled-reset';\nimport { createGlobalStyle } from 'styled-components';\nimport PALETTE from './color-variables';\n\nconst GlobalStyle = createGlobalStyle`\n  ${reset}\n  \n  * {\n    box-sizing: border-box;\n  }\n\n  body{\n    font-family: -apple-system,system-ui,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif;\n    background-color: ${PALETTE.GRAY[0]};\n  }\n\n  a {\n    color: inherit;\n    text-decoration: none;\n  }\n\n  input, button, textarea,p {\n    background-color: transparent;\n    border: none;\n    outline: none;\n  }\n`;\n\nexport default GlobalStyle;\n","import styled from 'styled-components';\n\nexport const Container = styled.div``","import styled from 'styled-components';\nimport PALETTE from '../../styles/color-variables';\nimport { Icon as CIcon } from '@channel.io/design-system';\n\nexport const Container = styled.div`\n  width: 400px;\n  background-color: ${PALETTE.GRAY[0]};\n  padding: 10px 15px;\n  border-radius: 5px;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  @media only screen and (max-width: 1100px) {\n    width: 300px;\n  }\n  @media only screen and (max-width: 900px) {\n    display: none;\n  }\n`;\n\nexport const SearchInputForm = styled.input`\n  font-size: 16px;\n  width: 100%;\n`;\n\nexport const Icon = styled(CIcon)`\n  cursor: pointer;\n  color: ${PALETTE.GRAY[4]};\n`;\n","export const DEFAULT_DEBOUNCE_TIME = 200;\n\nexport const THIS_YEAR = new Date().getFullYear();\nexport const YEARS = Array(10)\n  .fill(0)\n  .map((value, index) => THIS_YEAR - index);\n\nexport const APODS_PER_API_CALL = 9;\n\nexport const SCROLL_Y_RATIO = 0.95;\n","import { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../redux';\nimport { changeInput, removeInput } from '../redux/search';\nimport { DEFAULT_DEBOUNCE_TIME } from '../constants';\n\nconst useSearch = () => {\n  const dispatch = useDispatch();\n  const searchInput = useSelector((state: RootState) => state.search.input);\n\n  const [inputValue, setInputValue] = useState<string>('');\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      dispatch(changeInput(inputValue));\n    }, DEFAULT_DEBOUNCE_TIME);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [inputValue]);\n\n  const onChange = useCallback(\n    (e: any) => {\n      setInputValue(e.target.value);\n    },\n    [dispatch],\n  );\n\n  const onRemove = useCallback(() => {\n    setInputValue('');\n    dispatch(removeInput());\n  }, [dispatch]);\n\n  return { inputValue, searchInput, onChange, onRemove };\n};\n\nexport default useSearch;\n","import React from 'react';\nimport * as S from './SearchBarStyle';\nimport useSearch from '../../hooks/useSearch';\nimport { IconSize } from '@channel.io/design-system';\n\nconst SearchBar = () => {\n  const { inputValue, searchInput, onChange, onRemove } = useSearch();\n  return (\n    <S.Container>\n      <S.SearchInputForm\n        placeholder=\"Search\"\n        value={inputValue}\n        onChange={onChange}\n      />\n      {searchInput && (\n        <S.Icon name=\"cancel\" size={IconSize.S} onClick={onRemove} />\n      )}\n    </S.Container>\n  );\n};\n\nexport default SearchBar;\n","import { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n  finishLoadApods,\n  getApodByYear,\n  removeApodList,\n  setPage,\n  setYear,\n} from '../redux/apod';\n\nconst useSelect = () => {\n  const dispatch = useDispatch();\n\n  const onSetYear = useCallback(\n    (e) => {\n      const year = Number(e.target.value);\n      dispatch(removeApodList());\n      dispatch(setPage(1));\n      dispatch(finishLoadApods(false));\n      dispatch(setYear(year));\n      dispatch(getApodByYear(year));\n    },\n    [dispatch],\n  );\n\n  return { onSetYear };\n};\n\nexport default useSelect;\n","import styled from 'styled-components';\nimport PALETTE from '../../styles/color-variables';\n\nexport const Container = styled.div`\n  margin: 20px;\n`;\n\nexport const Select = styled.select`\n  cursor: pointer;\n  width: 100px;\n  height: 30px;\n  border: 1px solid ${PALETTE.GRAY[3]};\n  border-radius: 5px;\n  color: ${PALETTE.GRAY[5]};\n`;\n\nexport const Option = styled.option``;\n","import React from 'react';\nimport { YEARS } from '../../constants';\nimport useSelect from '../../hooks/useSelect';\nimport * as S from './DatePickerStyle';\n\nconst DatePicker = () => {\n  const { onSetYear } = useSelect();\n  return (\n    <S.Container>\n      <S.Select onChange={onSetYear}>\n        {YEARS.map((year) => (\n          <S.Option key={year}>{year}</S.Option>\n        ))}\n      </S.Select>\n    </S.Container>\n  );\n};\n\nexport default DatePicker;\n","import styled from 'styled-components';\nimport PALETTE from '../../styles/color-variables';\n\nexport const Container = styled.div`\n  background-color: ${PALETTE.WHITE};\n  height: 60px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  position: fixed;\n  top: 0;\n  width: 100%;\n  z-index: 3;\n  /* overflow: scroll; */\n`;\n\nexport const Logo = styled.div`\n  margin: 20px;\n  font-size: 18px;\n  font-weight: 600;\n  cursor: pointer;\n  user-select: none;\n`;\n","import React from 'react';\nimport { SearchBar } from '../../components/SearchBar';\nimport { DatePicker } from '../../components/DatePicker';\nimport * as S from './HeaderStyle';\nimport { Link } from 'react-router-dom';\n\ntype HeaderProps = {\n  isLogo?: boolean;\n  isSearchBar?: boolean;\n  isDatePicker?: boolean;\n};\n\nconst Header = ({\n  isLogo = true,\n  isSearchBar = true,\n  isDatePicker = true,\n}: HeaderProps) => {\n  return (\n    <S.Container>\n      {isLogo && (\n        <Link to=\"/\">\n          <S.Logo>Astronomy Pictures of the Day</S.Logo>\n        </Link>\n      )}\n      {isSearchBar && <SearchBar />}\n      {isDatePicker && <DatePicker />}\n    </S.Container>\n  );\n};\n\nexport default Header;\n","import { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../redux';\nimport {\n  finishLoadApods,\n  getApodByDate,\n  getApodByPeriod,\n  initializeSelectedApod,\n  setPage,\n} from '../redux/apod';\nimport { getPeriod } from '../utils/getPeriod';\n\nconst useApod = () => {\n  const apodList = useSelector((state: RootState) => state.apod.apodList);\n  const page = useSelector((state: RootState) => state.apod.page);\n  const year = useSelector((state: RootState) => state.apod.year);\n  const apodSelected = useSelector(\n    (state: RootState) => state.apod.apodSelected,\n  );\n  const dispatch = useDispatch();\n\n  const getApodSelected = useCallback(\n    (date) => {\n      dispatch(getApodByDate(date));\n    },\n    [dispatch],\n  );\n\n  const removeSelectedApod = useCallback(() => {\n    dispatch(initializeSelectedApod());\n  }, [dispatch]);\n\n  const loadApods = useCallback(() => {\n    dispatch(setPage(page + 1));\n\n    // eslint-disable-next-line prefer-const\n    let { startDate, endDate } = getPeriod(year, page + 1);\n    console.log(startDate, endDate);\n\n    const now = new Date();\n\n    if (\n      year === now.getFullYear() &&\n      new Date(endDate).getDate() >= now.getDate()\n    ) {\n      endDate = new Date().toISOString().split('T')[0];\n      dispatch(finishLoadApods(true));\n    }\n\n    dispatch(getApodByPeriod({ startDate, endDate }));\n  }, [dispatch, page, year]);\n\n  return {\n    apodList,\n    apodSelected,\n    getApodSelected,\n    removeSelectedApod,\n    loadApods,\n  };\n};\n\nexport default useApod;\n","import { APODS_PER_API_CALL } from '../constants';\n\ntype Period = {\n  startDate: string;\n  endDate: string;\n};\n\nexport const getPeriod = (year: number, page: number): Period => {\n  const oneDayDateTime = 1000 * 60 * 60 * 24;\n  const Interval = oneDayDateTime * APODS_PER_API_CALL;\n\n  const startDateTime =\n    new Date(`${year}-01-01`).getTime() + Interval * (page - 1);\n  const endDateTime = startDateTime + Interval - oneDayDateTime;\n\n  const startDate = new Date(startDateTime).toISOString().split('T')[0];\n  const endDate = new Date(endDateTime).toISOString().split('T')[0];\n\n  return { startDate, endDate };\n};\n","import styled, { css } from 'styled-components';\nimport PALETTE from '../../styles/color-variables';\nimport { Icon as CIcon } from '@channel.io/design-system';\n\nexport const Container = styled.div`\n  width: 1200px;\n  margin: 80px auto;\n  padding: 10px;\n  background-color: ${PALETTE.WHITE};\n  border-radius: 10px;\n  min-height: 600px;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  justify-content: center;\n  width: 100%;\n  position: relative;\n`;\n\n\nexport const ApodTitle = styled.div`\n  font-size: 28px;\n  font-weight: 600;\n  margin: 6px 0 24px 0;\n`;\n\nexport const ApodDate = styled.div`\n  font-size: 18px;\n  color: ${PALETTE.GRAY[4]};\n  margin: 12px 0 2px 0;\n`;\n\nexport const LinkToHDImg = styled.a`\n  position: absolute;\n  right: 54px;\n  top: 20px;\n  font-weight: bold;\n  font-size: 20px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: ${PALETTE.GRAY[5]};\n  &:hover {\n    color: ${PALETTE.BLACK};\n  }\n`;\n\nexport const Icon = styled(CIcon)``;\n\nexport const ApodImg = styled.img``;\n\nexport const ApodVideo = styled.iframe`\n  width: 1000px;\n  height: 600px;\n`;\n\nexport const ApodCopyright = styled.div`\n  color: ${PALETTE.GRAY[4]};\n  margin: 8px;\n`;\n\nexport const ApodExplanation = styled.p`\n  width: 100%;\n  font-size: 22px;\n  padding: 0 60px;\n  margin: 10px 0;\n  line-height: 34px;\n  overflow-wrap: break-word;\n`;\n\nconst loadingAnimation = css`\n  animation: rotateAnimation 1s linear infinite;\n  @keyframes rotateAnimation {\n    from {\n      transform: rotate(360deg);\n    }\n    to {\n      transform: rotate(0deg);\n    }\n  }\n`;\n\nexport const LoadingIcon = styled(CIcon)`\n  position: absolute;\n  color: ${PALETTE.GRAY[5]};\n  top: 30vh;\n  ${loadingAnimation};\n`;\n","import React, { useEffect } from 'react';\nimport useApod from '../../hooks/useApod';\nimport * as S from './ApodDetailStyle';\nimport { IconSize } from '@channel.io/design-system';\n\ntype ApodDetailProps = {\n  date: string;\n};\n\nconst ApodDetail = ({ date }: ApodDetailProps) => {\n  const { getApodSelected, apodSelected } = useApod();\n\n  useEffect(() => {\n    getApodSelected(date);\n  }, [getApodSelected, date]);\n\n  if (apodSelected) {\n    const {\n      title,\n      copyright,\n      date,\n      explanation,\n      hdurl,\n      media_type,\n      url,\n    } = apodSelected;\n\n    return (\n      <S.Container>\n        <S.Wrapper>\n          <S.ApodDate>{date}</S.ApodDate>\n          <S.ApodTitle>{title}</S.ApodTitle>\n          {hdurl && (\n            <S.LinkToHDImg href={hdurl} target=\"_blank\">\n              HD\n              <S.Icon name=\"in\" size={IconSize.S} />\n            </S.LinkToHDImg>\n          )}\n          {media_type === 'video' ? (\n            <S.ApodVideo src={url} />\n          ) : (\n            <S.ApodImg src={url} />\n          )}\n          {copyright && <S.ApodCopyright>©{copyright}</S.ApodCopyright>}\n          <S.ApodExplanation>{explanation}</S.ApodExplanation>\n        </S.Wrapper>\n      </S.Container>\n    );\n  }\n  return (\n    <S.Container>\n      <S.Wrapper>\n        <S.LoadingIcon name=\"rotate\" size={IconSize.L} />\n      </S.Wrapper>\n    </S.Container>\n  );\n};\n\nexport default ApodDetail;\n","import React from 'react';\nimport * as S from './ApodPageStyle';\nimport { Header } from '../../elements/Header';\nimport { ApodDetail } from '../../components/ApodDetail';\n\nconst ApodPage = ({ match }: any) => {\n  return (\n    <S.Container>\n      <Header isSearchBar={false} isDatePicker={false} />\n      <ApodDetail date={match.params.apod} />\n    </S.Container>\n  );\n};\n\nexport default ApodPage;\n","import styled, { css } from 'styled-components';\nimport { Icon as CIcon } from '@channel.io/design-system';\nimport PALETTE from '../../styles/color-variables';\n\nexport const Layout = styled.div`\n  width: 1100px;\n  margin: 60px auto;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n`;\n\nexport const Container = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-column-gap: 20px;\n  grid-row-gap: 20px;\n  max-width: 1100px;\n  margin: 20px;\n`;\n\nconst loadingAnimation = css`\n  animation: rotateAnimation 1s linear infinite;\n  @keyframes rotateAnimation {\n    from {\n      transform: rotate(360deg);\n    }\n    to {\n      transform: rotate(0deg);\n    }\n  }\n`;\n\nexport const IconWrapper = styled.div`\n  width: 1100px;\n  height: 400px;\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Icon = styled(CIcon)`\n  position: absolute;\n  color: ${PALETTE.GRAY[5]};\n  top: 20vh;\n  ${loadingAnimation};\n`;\n","import styled from 'styled-components';\nimport PALETTE from '../../styles/color-variables';\n\nexport const Container = styled.div`\n  width: 330px;\n  padding: 15px;\n  background-color: ${PALETTE.WHITE};\n  cursor: pointer;\n  border-radius: 5px;\n  transition: all 0.5s;\n  &:hover {\n    transform: scale(1.03);\n  }\n`;\n\nexport const ApodThumbnailImg = styled.img`\n  width: 300px;\n  height: 300px;\n  object-fit: cover;\n  border-radius: 5px;\n`;\n\nexport const ApodThumbnailVideo = styled.iframe`\n  width: 300px;\n  height: 300px;\n  object-fit: cover;\n  border-radius: 5px;\n`;\n\nexport const ApodTitle = styled.div`\n  font-size: 18px;\n  margin: 5px 3px;\n`;\n\nexport const ApodDate = styled.div`\n  font-size: 14px;\n  color: grey;\n  margin: 2px 3px;\n`;\n","import React, { useCallback } from 'react';\nimport * as S from './CardStyle';\nimport { Apod } from '../../types';\nimport { useHistory } from 'react-router-dom';\n\ntype CardProps = {\n  key: string;\n  apod: Apod;\n};\n\nconst Card = ({ apod }: CardProps) => {\n  const { title, url, date, media_type } = apod;\n  const history = useHistory();\n\n  const goToApodDetail = useCallback(() => {\n    history.push(`/apod/${date}`);\n  }, [apod]);\n\n  return (\n    <S.Container onClick={goToApodDetail}>\n      {media_type === 'video' ? (\n        <S.ApodThumbnailVideo src={url} />\n      ) : (\n        <S.ApodThumbnailImg src={url} />\n      )}\n      <S.ApodTitle>{title}</S.ApodTitle>\n      <S.ApodDate>{date}</S.ApodDate>\n    </S.Container>\n  );\n};\n\nexport default Card;\n","import { useEffect } from 'react';\nimport { SCROLL_Y_RATIO } from '../constants';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../redux';\n\nconst useScroll = (callback: () => void) => {\n  const finishLoad = useSelector((state: RootState) => state.apod.finishLoad);\n  const scrollLoading = useSelector(\n    (state: RootState) => state.loading['apod/GET_APOD_BY_PERIOD'],\n  );\n\n  useEffect(() => {\n    const loadApodsController = () => {\n      const clientHeight = window.scrollY + window.innerHeight;\n      const documentHeight = document.documentElement.scrollHeight;\n      if (clientHeight > documentHeight * SCROLL_Y_RATIO) {\n        callback();\n        window.removeEventListener('scroll', loadApodsController);\n      }\n    };\n\n    if (finishLoad) {\n      window.removeEventListener('scroll', loadApodsController);\n      return;\n    }\n\n    if (scrollLoading) {\n      window.removeEventListener('scroll', loadApodsController);\n      return;\n    }\n\n    window.addEventListener('scroll', loadApodsController);\n    return () => {\n      window.removeEventListener('scroll', loadApodsController);\n    };\n  }, [callback, SCROLL_Y_RATIO, finishLoad]);\n};\n\nexport default useScroll;\n","import React from 'react';\nimport * as S from './CardListStyle';\nimport { Card } from '../Card';\nimport useApodList from '../../hooks/useApod';\nimport useSearch from '../../hooks/useSearch';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../redux';\nimport { IconSize } from '@channel.io/design-system';\nimport useScroll from '../../hooks/useScroll';\nimport useApod from '../../hooks/useApod';\n\nconst CardList = () => {\n  const { apodList } = useApodList();\n  const { searchInput } = useSearch();\n  const { loadApods } = useApod();\n\n  useScroll(loadApods);\n\n  const initialLoading = useSelector(\n    (state: RootState) => state.loading['apod/GET_APOD_BY_YEAR'],\n  );\n\n  const scrollLoading = useSelector(\n    (state: RootState) => state.loading['apod/GET_APOD_BY_PERIOD'],\n  );\n\n  const filteredApodList = searchInput.length\n    ? apodList.filter((apod) =>\n        apod.title.toLowerCase().includes(searchInput.toLowerCase()),\n      )\n    : apodList;\n  return (\n    <>\n      <S.Layout>\n        {initialLoading && <S.Icon name=\"rotate\" size={IconSize.L} />}\n        <S.Container>\n          {apodList &&\n            filteredApodList.map((apod) => (\n              <Card key={apod.date} apod={apod} />\n            ))}\n        </S.Container>\n        {scrollLoading && (\n          <S.IconWrapper>\n            <S.Icon name=\"rotate\" size={IconSize.L} />\n          </S.IconWrapper>\n        )}\n      </S.Layout>\n    </>\n  );\n};\n\nexport default CardList;\n","import styled from 'styled-components';\n\nexport const Container = styled.div``;\n","import React, { useEffect } from 'react';\nimport { Header } from '../../elements/Header';\nimport { CardList } from '../../components/CardList';\nimport * as S from './MainStyle';\nimport useApod from '../../hooks/useApod';\n\nconst Main = () => {\n  const { apodSelected, removeSelectedApod } = useApod();\n\n  useEffect(() => {\n    if (apodSelected) {\n      removeSelectedApod();\n    }\n  }, []);\n\n  return (\n    <S.Container>\n      <Header />\n      <CardList />\n    </S.Container>\n  );\n};\n\nexport default Main;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { ApodPage } from '../containers/ApodPage';\nimport { Main } from '../containers/Main';\n\nconst AppRouter = () => {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={Main} />\n      <Route path=\"/apod/:apod\" component={ApodPage} />\n    </Switch>\n  );\n};\n\nexport default AppRouter;\n","import React from 'react';\nimport GlobalStyle from './styles/GlobalStyle';\nimport AppRouter from './routes/index';\n\nconst App = () => {\n  return (\n    <>\n      <GlobalStyle />\n      <AppRouter></AppRouter>\n    </>\n  );\n};\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { all } from 'redux-saga/effects';\nimport apod, { apodSaga } from './apod';\nimport search from './search';\nimport loading from './loading';\n\nconst rootReducer = combineReducers({ apod, search, loading });\n\nexport function* rootSaga() {\n  yield all([apodSaga()]);\n}\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport default rootReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer, { rootSaga } from './redux';\nimport { getApodByYear } from './redux/apod';\nimport { BrowserRouter } from 'react-router-dom';\nimport { THIS_YEAR } from './constants';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(sagaMiddleware)),\n);\n\nsagaMiddleware.run(rootSaga);\n\n// const DEFAULT_PERIOD = { startDate: '2021-01-18', endDate: '2021-01-22' };\nconst loadApod = () => {\n  store.dispatch(getApodByYear(THIS_YEAR));\n};\n// const loadApod = () => {\n//   store.dispatch(getApodByYear(2021));\n// };\n\nloadApod();\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n","export { default } from './reducer';\nexport * from './actions';\nexport * from './types';\n","enum ActionTypes {\n  CHANGE_INPUT = 'search/CHANGE_INPUT',\n  REMOVE_INPUT = 'search/REMOVE_INPUT',\n}\n\nexport default ActionTypes;\n","enum ActionTypes {\n  START_LOADING = 'loading/START_LOADING',\n  FINISH_LOADING = 'loading/FINISH_LOADING',\n}\n\nexport default ActionTypes;\n","export { default } from './reducer';\nexport * from './actions';\nexport * from './types';\n","enum ActionTypes {\n  GET_APOD_BY_PERIOD = 'apod/GET_APOD_BY_PERIOD',\n  GET_APOD_BY_PERIOD_SUCCESS = 'apod/GET_APOD_BY_PERIOD_SUCCESS',\n  GET_APOD_BY_PERIOD_FAILURE = 'apod/GET_APOD_BY_PERIOD_FAILURE',\n\n  GET_APOD_BY_DATE = 'apod/GET_APOD_BY_DATE',\n  GET_APOD_BY_DATE_SUCCESS = 'apod/GET_APOD_BY_DATE_SUCCESS',\n  GET_APOD_BY_DATE_FAILURE = 'apod/GET_APOD_BY_DATE_FAILURE',\n\n  INITIALIZE_SELECTED_APOD = 'apod/INITIALIZE_SELECTED_APOD',\n\n  GET_APOD_BY_YEAR = 'apod/GET_APOD_BY_YEAR',\n  GET_APOD_BY_YEAR_SUCCESS = 'apod/GET_APOD_BY_YEAR_SUCCESS',\n  GET_APOD_BY_YEAR_FAILURE = 'apod/GET_APOD_BY_YEAR_FAILURE',\n\n  SET_YEAR = 'apod/SET_YEAR',\n  SET_PAGE = 'apod/SET_PAGE',\n\n  REMOVE_APOD_LIST = 'apod/REMOVE_APOD_LIST',\n\n  FINISH_LOAD_APODS = 'apod/FINISH_LOAD_APODS'\n}\n\nexport default ActionTypes;\n"],"sourceRoot":""}